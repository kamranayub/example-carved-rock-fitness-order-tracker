# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  ###
  # Wait for Netlify Deploy Preview to build and deploy
  ###
  netlify:
    runs-on: ubuntu-16.04
    outputs:
      url: ${{ steps.netlify.outputs.url }}
    steps:
      - uses: kamranayub/wait-for-netlify-action@2.0.0
        id: netlify
        with:
          site_name: "carved-rock-order-tracker-pwa"
          max_timeout: 180
        env:
          NETLIFY_TOKEN: ${{secrets.NETLIFY_TOKEN}}

  ###
  # Cypress Chrome tests
  ###
  cypress-chrome:
    runs-on: ubuntu-16.04
    timeout-minutes: 15
    needs: netlify
    container:
      image: cypress/browsers:node12.14.1-chrome83-ff77
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Run all Cypress tests
      - name: Tests on Chrome
        uses: cypress-io/github-action@v2
        with:
          env: CI=true
          # Substitute Netlify Deploy Preview URL to test
          config: baseUrl=${{ needs.netlify.outputs.url }},chromeWebSecurity=false
          browser: chrome
          working-directory: e2e

      # Upload artifacts
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: e2e/cypress/screenshots

      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: e2e/cypress/videos

  ###
  # Cypress Microsoft Edge tests
  ###
  cypress-edge:
    runs-on: windows-latest
    timeout-minutes: 20
    needs: netlify
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: cypress-io/github-action@v2
        with:
          env: CI=true
          config: baseUrl=${{ needs.netlify.outputs.url }},chromeWebSecurity=false
          browser: edge
          working-directory: e2e

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: e2e/cypress/screenshots

      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: e2e/cypress/videos

  ###
  # Cypress Firefox tests
  # FIXME: Seems to stall/freeze under CI in notification tests?
  ###
  # cypress-firefox:
  #   runs-on: ubuntu-16.04
  #   timeout-minutes: 15
  #   needs: netlify
  #   container:
  #     image: cypress/browsers:node12.14.1-chrome83-ff77
  #     options: --user 1001
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - uses: cypress-io/github-action@v2
  #       with:
  #         env: CI=true
  #         config: baseUrl=${{ needs.netlify.outputs.url }}
  #         browser: firefox
  #         working-directory: e2e

  #     - uses: actions/upload-artifact@v1
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: e2e/cypress/screenshots
  #     - uses: actions/upload-artifact@v1
  #       if: always()
  #       with:
  #         name: cypress-videos
  #         path: e2e/cypress/videos

  ###
  # WebdriverIO Chrome tests
  ###
  wdio-chrome:
    runs-on: ubuntu-latest
    needs: netlify
    container:
      image: ianwalter/puppeteer:v4.0.0
      options: --shm-size=1g
    timeout-minutes: 10
    env:
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      PUPPETEER_EXEC_PATH: google-chrome-stable
      PUPPETEER_BROWSER: chromium
    defaults:
      run:
        working-directory: e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: npm install
      - run: npm run wdio
        env:
          WDIO_BASE_URL: ${{ needs.netlify.outputs.url }}

      # - uses: actions/upload-artifact@v1
      #   if: failure()
      #   with:
      #     name: logs
      #     path: e2e/wdio/logs

      # - uses: actions/upload-artifact@v1
      #   if: failure()
      #   with:
      #     name: screenshots
      #     path: e2e/wdio/screenshots
